/*
 * This progrm was created with the purpose of taking inputted marks
 * and organizing them then giving other information (average, highest, lowest, etc)
 */

/**
 * May 29, 2018
 * @author seden0957
 */
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Collections;

public class Display extends javax.swing.JFrame {
 
    ArrayList <Integer> grades = new ArrayList();
 
    /**
     * Creates new form Display
     */
    public Display() {
        initComponents();
    }
      
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        displayPanel = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        studentMarkLabel = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        markInput = new javax.swing.JTextField();
        markDisplayScroll = new javax.swing.JScrollPane();
        markDisplay = new javax.swing.JTextArea();
        otherDisplayScroll = new javax.swing.JScrollPane();
        otherDisplay = new javax.swing.JTextArea();
        sortButton = new javax.swing.JButton();
        analyzeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        title.setText("Marks Program");

        studentMarkLabel.setText("Student's Mark");

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        markDisplayScroll.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        markDisplayScroll.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        markDisplay.setColumns(20);
        markDisplay.setRows(5);
        markDisplayScroll.setViewportView(markDisplay);

        otherDisplayScroll.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        otherDisplayScroll.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        otherDisplay.setColumns(20);
        otherDisplay.setRows(5);
        otherDisplayScroll.setViewportView(otherDisplay);

        sortButton.setText("Sort");
        sortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortButtonActionPerformed(evt);
            }
        });

        analyzeButton.setText("Analyze");
        analyzeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analyzeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout displayPanelLayout = new javax.swing.GroupLayout(displayPanel);
        displayPanel.setLayout(displayPanelLayout);
        displayPanelLayout.setHorizontalGroup(
            displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayPanelLayout.createSequentialGroup()
                .addGroup(displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(displayPanelLayout.createSequentialGroup()
                        .addGap(177, 177, 177)
                        .addComponent(title))
                    .addGroup(displayPanelLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(markDisplayScroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(otherDisplayScroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(31, Short.MAX_VALUE))
            .addGroup(displayPanelLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(displayPanelLayout.createSequentialGroup()
                        .addComponent(studentMarkLabel)
                        .addGap(18, 18, 18)
                        .addComponent(markInput)
                        .addGap(18, 18, 18)
                        .addComponent(addButton)
                        .addGap(59, 59, 59))
                    .addGroup(displayPanelLayout.createSequentialGroup()
                        .addComponent(sortButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(analyzeButton)
                        .addGap(80, 80, 80))))
        );
        displayPanelLayout.setVerticalGroup(
            displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title)
                .addGap(30, 30, 30)
                .addGroup(displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentMarkLabel)
                    .addComponent(addButton)
                    .addComponent(markInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(otherDisplayScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                    .addComponent(markDisplayScroll))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sortButton)
                    .addComponent(analyzeButton))
                .addGap(27, 27, 27))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(displayPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(displayPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        int text; 
        text = (Integer.parseInt(markInput.getText()));
        if (text >= 0 && text <= 100) //makes sure the number is between 1 and 100
            {
                grades.add(Integer.parseInt(markInput.getText()));
            }
    }//GEN-LAST:event_addButtonActionPerformed

    private void analyzeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analyzeButtonActionPerformed
         DecimalFormat x = new DecimalFormat ("###");  
    int average, minMark = 0, maxMark = 0, levelR, levelOne, levelTwo, levelThree, levelFour, gradeRange;
    average = 0;
    levelR = 0;
    levelOne = 0;
    levelTwo = 0;
    levelThree = 0;
    levelFour = 0;
     for(int i = 0; i < grades.size(); i++)//Class Average
        {
            Collections.sort(grades);
            average = average + grades.get(i); 

            maxMark = grades.get(i);
            minMark = grades.get(0);
                
            if(grades.get(i) < 50)//Fail
                {
                    levelR = levelR + 1;                 
                }              
            else if(grades.get(i) >= 50 && grades.get(i) < 60)//Level one
                {
                    levelOne = levelOne + 1;    
                }
            else if(grades.get(i) >=60 && grades.get(i) < 70 )//Level two
                {
                    levelTwo = levelTwo + 1;
                }
            else if(grades.get(i) >=70 && grades.get(i) < 80 )//Level three
                {
                    levelThree = levelThree + 1;
                }
            else 
            {
                levelFour = levelFour + 1;
            }
               
              
            }
        average = average/grades.size();
        gradeRange = maxMark - minMark;
        otherDisplay.setText("Class Average: " + x.format(average) + "\n" + "Highest Mark: " + maxMark + "\n" + "Lowest Mark: " + minMark + "\n" + "Range: " + gradeRange + "\n" + "Students at level 4: " + levelFour + "\n" + "Students at level 3: " + levelThree + "\n" + "Students at level 2: " + levelTwo + "\n" +"Students at level 1: " + levelOne + "\n" +"Students at level R:" + levelR + "\n"); //display everthing on the right side
        
           
    }//GEN-LAST:event_analyzeButtonActionPerformed

    private void sortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortButtonActionPerformed
        Collections.sort(grades);
           for(int i = 0; i < grades.size(); i++)
        {
            markDisplay.setText(markDisplay.getText() + grades.get(i) + "\n");            
        }
            
    }//GEN-LAST:event_sortButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Display().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton analyzeButton;
    private javax.swing.JPanel displayPanel;
    private javax.swing.JTextArea markDisplay;
    private javax.swing.JScrollPane markDisplayScroll;
    private javax.swing.JTextField markInput;
    private javax.swing.JTextArea otherDisplay;
    private javax.swing.JScrollPane otherDisplayScroll;
    private javax.swing.JButton sortButton;
    private javax.swing.JLabel studentMarkLabel;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
